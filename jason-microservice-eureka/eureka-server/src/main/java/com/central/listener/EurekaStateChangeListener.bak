package com.smartcloud.listener;

import com.netflix.appinfo.InstanceInfo;
import com.netflix.discovery.shared.Applications;
import com.netflix.eureka.EurekaServerContextHolder;
import com.netflix.eureka.registry.PeerAwareInstanceRegistry;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.netflix.eureka.server.event.*;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Component;

/**
 * @description:
 **/
@Component
public class EurekaStateChangeListener {
    private Logger log = LoggerFactory.getLogger(EurekaStateChangeListener.class);

    @EventListener
    public void listen(EurekaInstanceCanceledEvent event) {
        //服务断线事件
        String appName = event.getAppName();
        String serverId = event.getServerId();

        // 获取当前Eureka实例中的节点信息
        PeerAwareInstanceRegistry registry = EurekaServerContextHolder.getInstance().getServerContext().getRegistry();
        Applications applications = registry.getApplications();
        // 遍历获取已注册节点中与当前失效节点ID一致的节点信息
        applications.getRegisteredApplications().forEach((registeredApplication) -> {
            registeredApplication.getInstances().forEach((instance) -> {
                if (instance.getInstanceId().equals(event.getServerId())) {
                    log.debug("服务：" + instance.getAppName() + " 挂啦。。。");
                    System.err.println("服务：" + instance.getAppName() + " 挂啦。。。");
                    // // 扩展消息提醒 邮件、手机短信、微信等
                }
            });
        });
    }


    @EventListener
    public void listen(EurekaInstanceRegisteredEvent event) {
        InstanceInfo instanceInfo = event.getInstanceInfo();
        log.debug("服务：" + instanceInfo.getAppName() + " 注册成功啦。。。");
        System.err.println("服务：" + instanceInfo.getAppName() + " 注册成功啦。。。");
    }

    @EventListener
    public void listen(EurekaInstanceRenewedEvent event) {
        log.debug("心跳检测服务：(" + event.getServerId() + ")"+ event.getAppName() + "。。");
        System.err.println("心跳检测服务：(" + event.getServerId() + ")"+ event.getAppName() + "。。");
    }

    @EventListener
    public void listen(EurekaRegistryAvailableEvent event) {
        System.err.println("注册中心 启动");
    }

    @EventListener
    public void listen(EurekaServerStartedEvent event) {
        System.err.println("Eureka Server 启动");
    }
}